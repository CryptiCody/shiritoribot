plugins {
    id('java')
    id('maven-publish')
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'edu.regent'
version '1.2'


sourceCompatibility = 1.17

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {

    implementation 'net.dv8tion:JDA:4.2.0_247'
    implementation 'com.jagrosh:jda-utilities-command:3.0.5'

    testImplementation group:'org.junit.jupiter', name:'junit-jupiter-engine', version:'5.4.0'
    testImplementation 'org.mockito:mockito-core:4.3.1'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'shiritoribot'
            from components.java

            pom {
                name = "ShiritoriBot"
                description = "A bot for playing Shiritori on Discord"
                developers {
                    developer {
                        id = "CrypticCabub"
                        name = "Caleb Pearson"
                        email = "CrypticCabub@gmail.com"
                    }
                    developer {
                        id = ""
                        name = ""
                        email = ""
                    }
                }
            }
        }
    }
}




javadoc {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
    options.links(
            'http://docs.oracle.com/javase/7/docs/api/'
    )
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

shadowJar {
    archiveClassifier.set('')
}

artifacts {
    shadowJar
}

build.dependsOn(shadowJar)

jar {
    manifest {
        attributes(
                'Main-Class': 'edu.regent.shiritoribot.ShiritoriBot'
        )
    }
    from { fileTree('lib').collect { zipTree(it) } }
}

artifacts {
    archives javadocJar
}